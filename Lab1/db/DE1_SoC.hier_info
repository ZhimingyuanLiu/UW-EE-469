|DE1_SoC
CLOCK_50 => tBase[0].CLK
CLOCK_50 => tBase[1].CLK
CLOCK_50 => tBase[2].CLK
CLOCK_50 => tBase[3].CLK
CLOCK_50 => tBase[4].CLK
CLOCK_50 => tBase[5].CLK
CLOCK_50 => tBase[6].CLK
CLOCK_50 => tBase[7].CLK
CLOCK_50 => tBase[8].CLK
CLOCK_50 => tBase[9].CLK
CLOCK_50 => tBase[10].CLK
CLOCK_50 => tBase[11].CLK
CLOCK_50 => tBase[12].CLK
CLOCK_50 => tBase[13].CLK
CLOCK_50 => tBase[14].CLK
CLOCK_50 => tBase[15].CLK
CLOCK_50 => tBase[16].CLK
CLOCK_50 => tBase[17].CLK
CLOCK_50 => tBase[18].CLK
CLOCK_50 => tBase[19].CLK
CLOCK_50 => tBase[20].CLK
CLOCK_50 => tBase[21].CLK
HEX0[0] << <VCC>
HEX0[1] << <VCC>
HEX0[2] << <VCC>
HEX0[3] << <VCC>
HEX0[4] << <VCC>
HEX0[5] << <VCC>
HEX0[6] << <VCC>
HEX1[0] << <VCC>
HEX1[1] << <VCC>
HEX1[2] << <VCC>
HEX1[3] << <VCC>
HEX1[4] << <VCC>
HEX1[5] << <VCC>
HEX1[6] << <VCC>
HEX2[0] << <VCC>
HEX2[1] << <VCC>
HEX2[2] << <VCC>
HEX2[3] << <VCC>
HEX2[4] << <VCC>
HEX2[5] << <VCC>
HEX2[6] << <VCC>
HEX3[0] << <VCC>
HEX3[1] << <VCC>
HEX3[2] << <VCC>
HEX3[3] << <VCC>
HEX3[4] << <VCC>
HEX3[5] << <VCC>
HEX3[6] << <VCC>
HEX4[0] << <VCC>
HEX4[1] << <VCC>
HEX4[2] << <VCC>
HEX4[3] << <VCC>
HEX4[4] << <VCC>
HEX4[5] << <VCC>
HEX4[6] << <VCC>
HEX5[0] << <VCC>
HEX5[1] << <VCC>
HEX5[2] << <VCC>
HEX5[3] << <VCC>
HEX5[4] << <VCC>
HEX5[5] << <VCC>
HEX5[6] << <VCC>
KEY[0] => ~NO_FANOUT~
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
LEDR[0] << LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] << LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] << LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] << LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] << <GND>
LEDR[5] << <GND>
LEDR[6] << <GND>
LEDR[7] << <GND>
LEDR[8] << <GND>
LEDR[9] << <GND>
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => reset[0].IN1
SW[7] => reset[1].IN1
SW[8] => reset[2].IN1
SW[9] => reset[3].IN1


|DE1_SoC|rippleCounter:rCount
clk => clk.IN1
reset => reset.IN4
out[0] <= DFlipFlop:zero.port0
out[1] <= DFlipFlop:one.port0
out[2] <= DFlipFlop:two.port0
out[3] <= DFlipFlop:three.port0


|DE1_SoC|rippleCounter:rCount|DFlipFlop:zero
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
qBar <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
D => q~reg0.DATAIN
clk => q~reg0.CLK
rst => q~reg0.ACLR


|DE1_SoC|rippleCounter:rCount|DFlipFlop:one
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
qBar <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
D => q~reg0.DATAIN
clk => q~reg0.CLK
rst => q~reg0.ACLR


|DE1_SoC|rippleCounter:rCount|DFlipFlop:two
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
qBar <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
D => q~reg0.DATAIN
clk => q~reg0.CLK
rst => q~reg0.ACLR


|DE1_SoC|rippleCounter:rCount|DFlipFlop:three
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
qBar <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
D => q~reg0.DATAIN
clk => q~reg0.CLK
rst => q~reg0.ACLR


|DE1_SoC|counterDown:downcount
clk => clk.IN4
reset => reset.IN4
out[0] <= DFlipFlop:zero.port0
out[1] <= DFlipFlop:one.port0
out[2] <= DFlipFlop:two.port0
out[3] <= DFlipFlop:three.port0


|DE1_SoC|counterDown:downcount|DFlipFlop:zero
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
qBar <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
D => q~reg0.DATAIN
clk => q~reg0.CLK
rst => q~reg0.ACLR


|DE1_SoC|counterDown:downcount|DFlipFlop:one
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
qBar <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
D => q~reg0.DATAIN
clk => q~reg0.CLK
rst => q~reg0.ACLR


|DE1_SoC|counterDown:downcount|DFlipFlop:two
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
qBar <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
D => q~reg0.DATAIN
clk => q~reg0.CLK
rst => q~reg0.ACLR


|DE1_SoC|counterDown:downcount|DFlipFlop:three
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
qBar <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
D => q~reg0.DATAIN
clk => q~reg0.CLK
rst => q~reg0.ACLR


|DE1_SoC|JohnsonCounter:Jcount
clk => outi[0].CLK
clk => outi[1].CLK
clk => outi[2].CLK
clk => outi[3].CLK
reset => outi[0].ACLR
reset => outi[1].ACLR
reset => outi[2].ACLR
reset => outi[3].ACLR
out[0] <= outi[0].DB_MAX_OUTPUT_PORT_TYPE
out[1] <= outi[1].DB_MAX_OUTPUT_PORT_TYPE
out[2] <= outi[2].DB_MAX_OUTPUT_PORT_TYPE
out[3] <= outi[3].DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|countDownBlock:a1
out[0] <= DFlipFlop:inst.q
out[1] <= DFlipFlop:inst1.q
out[2] <= DFlipFlop:inst2.q
out[3] <= DFlipFlop:inst3.q
clk => DFlipFlop:inst.clk
clk => DFlipFlop:inst1.clk
clk => DFlipFlop:inst2.clk
clk => DFlipFlop:inst3.clk
reset => DFlipFlop:inst.rst
reset => DFlipFlop:inst1.rst
reset => DFlipFlop:inst2.rst
reset => DFlipFlop:inst3.rst


|DE1_SoC|countDownBlock:a1|DFlipFlop:inst
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
qBar <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
D => q~reg0.DATAIN
clk => q~reg0.CLK
rst => q~reg0.ACLR


|DE1_SoC|countDownBlock:a1|DFlipFlop:inst1
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
qBar <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
D => q~reg0.DATAIN
clk => q~reg0.CLK
rst => q~reg0.ACLR


|DE1_SoC|countDownBlock:a1|DFlipFlop:inst2
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
qBar <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
D => q~reg0.DATAIN
clk => q~reg0.CLK
rst => q~reg0.ACLR


|DE1_SoC|countDownBlock:a1|DFlipFlop:inst3
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
qBar <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
D => q~reg0.DATAIN
clk => q~reg0.CLK
rst => q~reg0.ACLR


