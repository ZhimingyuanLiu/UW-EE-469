module AddandSub (Cout, S, Sub, A, B, Cin);
output Cout, S; 
input A, B, Cin, Sub ;

logic AorB;
logic AorCin;
logic BorCin;
logic Bnew;

wire SubEnable;

xor xor1(Bnew, Sub, B);
and 

and and1(AandB,A,Bnew);
and and2(AandCin,A,Cin);
and and3(BandCin, Bnew, Cin);

or(Cout,AandB,AandCin,BandCin);


xor sum(S, A, B, Cin)

endmodule



module halfAdd (Cout, S, A, B);
output Cout, S; 
input A, B;

AddandSub a1(.Cout, .S, .A, .B, .Cin);
endmodule

module haldSub(Cout, S, A, B);
output Cout, S;
input A, B;
AddandSub a1(.Cout, .S, .A, .B, .1'b1);


endmodule



